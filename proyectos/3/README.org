#+title: Proyecto 3: (Micro) sistema de archivos

#+BEGIN_SRC yaml
Planteamiento: 09.05.2019
Entrega: 23.05.2019
#+END_SRC

¬°Las [[./calificaciones.org][calificaciones y comentarios]] ya est√°n disponibles!

** Descripci√≥n del proyecto

Para la unidad de sistemas de archivos, creo que resulta natural que
el proyecto sea implementar un sistema de archivos üòâ Pero, a
diferencia de lo que algunos de ustedes recordar√°n por iteraciones de
este curso, esta vez lo har√°n trabajando sobre una /especificaci√≥n/ y
sobre un /caso de referencia/.

Ojo: Les planteo en este momento el proyecto. D√©jenme pensar un poco
en un par de refinamientos que tengo pendientes, incluyendo desglosar
c√≥mo ser√° calificado. Toda esa informaci√≥n, sin falta, antes del
/martes 14 de mayo/.

** ¬øQu√© tengo que hacer?

Lo que ustedes deben desarrollar es un programa que pueda obtener,
crear y modificar informaci√≥n en el micro-sistema-de-archivos de la
Facultad de Ingenier√≠a, =FiUnamFS=.

Siguiendo la especificaci√≥n que aparece en la siguiente secci√≥n,
tienen que desarrollar un programa que pueda:

1. Listar los contenidos del directorio
2. Copiar uno de los archivos de dentro del =FiUnamFS= hacia tu sistema
3. Copiar un archivo de tu computadora hacia tu =FiUnamFS=
4. Eliminar un archivo del =FiUnamFS=
5. Desafortunadamente, este sistema de archivos /simplote/ es muy dado
   a la fragmentaci√≥n externa. Generen tambi√©n un programa que
   /desfragmente/ al =FiUnamFS=. Ojo, la defragmentaci√≥n debe hacerse
   /dentro del sistema de archivos/ (no creando un sistema de archivos
   nuevo y copiando hacia √©ste).

*** Sistema muestra

Para verificar su implementaci√≥n, pueden [[./fiunamfs.img][descargar un sistema de
archivos ejemplo]] que cumple con el planteamiento. Verifiquen que
pueden realizar todas las tareas que les solicit√© con √©ste. Ind√≠quenme
‚Äî ¬øCu√°les son los contenidos del /disco/?

** Especificaci√≥n de =FiUnamFS=

- El sistema de archivos cabe en un /diskette/ tradicional. Claro, no
  espero que tengan acceso al hardware, por lo que lo simularemos
  represent√°ndolo en un archivo de longitud fija, de 1440 Kilobytes
- Por simplicidad, si bien en un sistema de archivos real
  representar√≠amos las magnitudes en su representaci√≥n binaria, vamos
  a hacerlo con cadenas (esto es, en vez de representar al n√∫mero
  =1354= como los caracteres ASCII =0, 0, 5, 74= (porque 5*256=1280,
  1280+74=1354), repres√©ntala como la cadena =1354=. Si el campo en
  que vas a ubicar este valor mide m√°s del espacio necesario, agrega
  ceros a la izquierda.
- La superficie del disco se divide en sectores de 1024 bytes. Cada
  cluster mide un sector.
- El pseudodispositivo no maneja /tabla de particiones/, hospeda
  directamente un /volumen/ en la totalidad de su espacio.
- =FiUnamFS= maneja √∫nicamente un /directorio plano/, no se consideran
  subdirectorios.
- El primer cluster (#0) del pseudodispositivo es el
  /superbloque/. Este contiene informaci√≥n en los siguientes bytes:
  - 0--8 :: Para identificaci√≥n, el nombre del sistema de
            archivos. ¬°Debes validar nunca modificar un sistema de
            archivos que no sea el correcto! Debe ser la cadena =FiUnamFS=.
  - 10--13 :: Versi√≥n de la implementaci√≥n. Estamos implementando la
              versi√≥n =0.4=
  - 20--35 :: Etiqueta del volumen
  - 40--45 :: Tama√±o del cluster en bytes
  - 47--49 :: N√∫mero de clusters que mide el directorio
  - 52--60 :: N√∫mero de clusters que mide la unidad completa
  El resto del superbloque puede quedar vac√≠o (o puedes
  /sobrecargarlo/ con otros datos ‚Äâ‚Äî No es importante para la
  implementaci√≥n.
- El sistema de archivos es de /asignaci√≥n contigua/. Toda la
  informaci√≥n de los archivos est√° en el directorio.
- El directorio est√° ubicado en los clusters 1 a 4. Cada entrada del
  directorio mide 64 bytes, consistentes en:
  - 0--15 :: Nombre del archivo
  - 16--24 :: Tama√±o del archivo, en bytes
  - 25--30 :: Cluster inicial
  - 31--45 :: Hora y fecha de creaci√≥n del archivo, especificando
              AAAAMMDDHHMMSS (p.ej. '20190509182600')
  - 46--60 :: Hora y fecha de √∫ltima modificaci√≥n del archivo,
              especificando AAAAMMDDHHMMSS (p.ej. '20190509182600')
  - 61--64 :: Espacio no utilizado (¬øreservado para expansi√≥n futura?)
- Las entradas no utilizadas del directorio se identifican porque
  en el campo de nombre llevan la cadena =AQUI_NO_VA_NADA=.
  - Los nombres de archivos pueden componerse de cualquier caracter
    dentro del subconjunto ASCII de 7 bits (no acentuados, no Unicode,
    s√≥lo el viejo y aburrido US-ASCII)
- Es un sistema de archivos plano ‚Äî No maneja subdirectorios.
- Despu√©s del directorio, todo el espacio restante es espacio de
  datos.



